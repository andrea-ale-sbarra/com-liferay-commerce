components:
    parameters:
        channelId:
            in: path
            explode: false
            name: channelId
            required: true
            schema:
                description:
                    Channel Id
                example: 30130
                format: int64
                minimum: 0
                type: integer
            style: simple
    schemas:
        Availability:
            properties:
                availabilityLabel:
                    example: Available
                    type: string
                availabilityNumber:
                    format: int32
                    type: integer
            type: object
        Error:
            properties:
                errorCode:
                    description:
                        Internal error code mapping
                    example: 996
                    readOnly: true
                    type: integer
                errorDescription:
                    example: Unable to find currency. Currency code should be expressed with
                        3-letter ISO 4217 format.
                    readOnly: true
                    type: string
                message:
                    example: No CommerceCurrency exists with the key {groupId=41811, code=US
                        Dollar}
                    readOnly: true
                    type: string
                status:
                    description:
                        HTTP Status code
                    example: 404
                    readOnly: true
                    type: integer
            required:
                - errorCode
                - errorDescription
                - message
                - status
            type: object
        Price:
            properties:
                price:
                    type: string
                promoPrice:
                    type: string
            type: object
        Product:
            properties:
                allowedOrderQuantities:
                    example:
                        - 10
                        - 20
                        - 30
                        - 40
                    items:
                        format: int32
                        type: integer
                    type: array
                createDate:
                    format: date
                    type: string
                description:
                    type: string
                expando:
                    additionalProperties: true
                    type: object
                externalReferenceCode:
                    example: AB-34098-789-N
                    type: string
                id:
                    example: 30130
                    format: int64
                    minimum: 0
                    readOnly: true
                    type: integer
                maxOrderQuantity:
                    format: int32
                    type: integer
                metaDescription:
                    type: string
                metaKeyword:
                    type: string
                metaTitle:
                    type: string
                minOrderQuantity:
                    format: int32
                    type: integer
                modifiedDate:
                    format: date
                    type: string
                multipleOrderQuantity:
                    format: int32
                    type: integer
                name:
                    type: string
                productId:
                    format: int64
                    readOnly: true
                    type: integer
                productType:
                    example: simple
                    type: string
                shortDescription:
                    type: string
                skus:
                    items:
                        $ref: "#/components/schemas/Sku"
                    type: array
                tags:
                    example:
                        - tag1
                        - tag2
                        - tag3
                    items:
                        type: string
                    type: array
                url:
                    type: string
                urlImage:
                    type: string
            type: object
        Sku:
            properties:
                availability:
                    $ref: "#/components/schemas/Availability"
                price:
                    $ref: "#/components/schemas/Price"
                sku:
                    type: string
            type: object
info:
    description:
        Headless Delivery Commerce Catalog API
    license:
        name: Apache 2.0
        url: http://www.apache.org/licenses/LICENSE-2.0.html
    title: Headless Delivery
    version: v1.0
openapi: 3.0.1
paths:
    /stores/{channelId}/products:
        get:
            description:
                Retrieves products from selected channel.
            operationId: getStoreChannelProductsPage
            parameters:
                - in: path
                  explode: false
                  name: channelId
                  required: true
                  schema:
                      description:
                          Channel Id
                      example: 30130
                      format: int64
                      minimum: 0
                      type: integer
                  style: simple
                - in: query
                  name: filter
                  required: false
                  schema:
                      type: string
                - in: query
                  name: page
                  required: false
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  required: false
                  schema:
                      type: integer
                - in: query
                  name: sort
                  required: false
                  schema:
                      type: string
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/Product"
                                type: array
                        application/xml:
                            schema:
                                items:
                                    $ref: "#/components/schemas/Product"
                                type: array
                401:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/Error"
                    description:
                        Authentication information is missing or invalid
                404:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/Error"
                    description:
                        The specified resource was not found
                500:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/Error"
                    description:
                        Unexpected error
            tags: ["Product"]
servers:
    - url: /